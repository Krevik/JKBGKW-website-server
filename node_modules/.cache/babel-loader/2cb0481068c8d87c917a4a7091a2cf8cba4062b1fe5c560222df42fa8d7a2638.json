{"ast":null,"code":"import{useEffect}from\"react\";import{appStore}from\"../redux/store\";import{authenticationActions}from\"../redux/slices/authenticationSlice\";import{useSelector}from\"react-redux\";import axios from\"axios\";var STEAM_API_KEY=\"F9B6127DDEB6AF27EA0D64F1E5C642A4\";export var steamAPIService={useSteamAuthService:function useSteamAuthService(){useEffect(function(){if(window.location.href.includes(\"openid\")){var search=window.location.search.substring(1);var urlObj=JSON.parse('{\"'+decodeURI(search).replace(/\"/g,'\\\\\"').replace(/&/g,'\",\"').replace(/=/g,'\":\"')+'\"}');var getUserId=function getUserId(response){var str=response[\"openid.claimed_id\"];var res=decodeURIComponent(str);var propsArr=res.split(\"/\");console.log(propsArr);return propsArr[propsArr.length-1];};var userId=getUserId(urlObj);userId&&appStore.dispatch(authenticationActions.setUserID(userId));window.location.href=\"/\";}},[]);},useUserDataFetcher:function useUserDataFetcher(){var userID=useSelector(function(state){return state.authenticationReducer.userID;});useEffect(function(){if(userID){var fetchURL=\"https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?key=\".concat(STEAM_API_KEY,\"&steamids=\").concat(userID);axios.get(fetchURL,{headers:{Accept:\"application/json\",\"Content-Type\":\"application/x-www-form-urlencoded; charset=UTF-8\"}}).then(function(response){console.log(response);});}},[userID]);}};","map":{"version":3,"names":["useEffect","appStore","authenticationActions","useSelector","axios","STEAM_API_KEY","steamAPIService","useSteamAuthService","window","location","href","includes","search","substring","urlObj","JSON","parse","decodeURI","replace","getUserId","response","str","res","decodeURIComponent","propsArr","split","console","log","length","userId","dispatch","setUserID","useUserDataFetcher","userID","state","authenticationReducer","fetchURL","get","headers","Accept","then"],"sources":["C:/Users/admin/Downloads/react-express-starter-master/src/services/steamAPIService.ts"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { AppState, appStore } from \"../redux/store\";\r\nimport { authenticationActions } from \"../redux/slices/authenticationSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst STEAM_API_KEY = \"F9B6127DDEB6AF27EA0D64F1E5C642A4\";\r\n\r\nexport const steamAPIService = {\r\n\tuseSteamAuthService: () => {\r\n\t\tuseEffect(() => {\r\n\t\t\tif (window.location.href.includes(\"openid\")) {\r\n\t\t\t\tconst search = window.location.search.substring(1);\r\n\r\n\t\t\t\tconst urlObj = JSON.parse(\r\n\t\t\t\t\t'{\"' +\r\n\t\t\t\t\t\tdecodeURI(search)\r\n\t\t\t\t\t\t\t.replace(/\"/g, '\\\\\"')\r\n\t\t\t\t\t\t\t.replace(/&/g, '\",\"')\r\n\t\t\t\t\t\t\t.replace(/=/g, '\":\"') +\r\n\t\t\t\t\t\t'\"}'\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst getUserId = (response: { [x: string]: any }) => {\r\n\t\t\t\t\tconst str = response[\"openid.claimed_id\"];\r\n\t\t\t\t\tconst res = decodeURIComponent(str);\r\n\t\t\t\t\tconst propsArr = res.split(\"/\");\r\n\t\t\t\t\tconsole.log(propsArr);\r\n\r\n\t\t\t\t\treturn propsArr[propsArr.length - 1];\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst userId = getUserId(urlObj);\r\n\t\t\t\tuserId && appStore.dispatch(authenticationActions.setUserID(userId));\r\n\t\t\t\twindow.location.href = \"/\";\r\n\t\t\t}\r\n\t\t}, []);\r\n\t},\r\n\tuseUserDataFetcher: () => {\r\n\t\tconst userID = useSelector(\r\n\t\t\t(state: AppState) => state.authenticationReducer.userID\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (userID) {\r\n\t\t\t\tconst fetchURL = `https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?key=${STEAM_API_KEY}&steamids=${userID}`;\r\n\t\t\t\taxios\r\n\t\t\t\t\t.get(fetchURL, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\t\t\"Content-Type\":\r\n\t\t\t\t\t\t\t\t\"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, [userID]);\r\n\t},\r\n};\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAAmBC,QAAQ,KAAQ,gBAAgB,CACnD,OAASC,qBAAqB,KAAQ,qCAAqC,CAC3E,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAOC,MAAK,KAAM,OAAO,CAEzB,GAAMC,cAAa,CAAG,kCAAkC,CAExD,MAAO,IAAMC,gBAAe,CAAG,CAC9BC,mBAAmB,CAAE,8BAAM,CAC1BP,SAAS,CAAC,UAAM,CACf,GAAIQ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAE,CAC5C,GAAMC,OAAM,CAAGJ,MAAM,CAACC,QAAQ,CAACG,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC,CAElD,GAAMC,OAAM,CAAGC,IAAI,CAACC,KAAK,CACxB,IAAI,CACHC,SAAS,CAACL,MAAM,CAAC,CACfM,OAAO,CAAC,IAAI,CAAE,KAAK,CAAC,CACpBA,OAAO,CAAC,IAAI,CAAE,KAAK,CAAC,CACpBA,OAAO,CAAC,IAAI,CAAE,KAAK,CAAC,CACtB,IAAI,CACL,CAED,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,QAA8B,CAAK,CACrD,GAAMC,IAAG,CAAGD,QAAQ,CAAC,mBAAmB,CAAC,CACzC,GAAME,IAAG,CAAGC,kBAAkB,CAACF,GAAG,CAAC,CACnC,GAAMG,SAAQ,CAAGF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC,CAC/BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAErB,MAAOA,SAAQ,CAACA,QAAQ,CAACI,MAAM,CAAG,CAAC,CAAC,CACrC,CAAC,CAED,GAAMC,OAAM,CAAGV,SAAS,CAACL,MAAM,CAAC,CAChCe,MAAM,EAAI5B,QAAQ,CAAC6B,QAAQ,CAAC5B,qBAAqB,CAAC6B,SAAS,CAACF,MAAM,CAAC,CAAC,CACpErB,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,GAAG,CAC3B,CACD,CAAC,CAAE,EAAE,CAAC,CACP,CAAC,CACDsB,kBAAkB,CAAE,6BAAM,CACzB,GAAMC,OAAM,CAAG9B,WAAW,CACzB,SAAC+B,KAAe,QAAKA,MAAK,CAACC,qBAAqB,CAACF,MAAM,GACvD,CAEDjC,SAAS,CAAC,UAAM,CACf,GAAIiC,MAAM,CAAE,CACX,GAAMG,SAAQ,iFAA4E/B,aAAa,sBAAa4B,MAAM,CAAE,CAC5H7B,KAAK,CACHiC,GAAG,CAACD,QAAQ,CAAE,CACdE,OAAO,CAAE,CACRC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CACb,kDACF,CACD,CAAC,CAAC,CACDC,IAAI,CAAC,SAACpB,QAAQ,CAAK,CACnBM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC,CACtB,CAAC,CAAC,CACJ,CACD,CAAC,CAAE,CAACa,MAAM,CAAC,CAAC,CACb,CACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}